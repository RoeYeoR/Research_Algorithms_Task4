‫בעיית סנטה קלאוס‬
‫‪ 1.‬מבוא‪(Introduction):‬‬
‫•‬

‫הבעיה ‪:‬המאמר עוסק בבעיית "סנטה קלאוס"‪ :‬כיצד לחלק ‪ n‬מתנות בין ‪ m‬ילדים‪ ,‬כאשר לכל ילד ‪ i‬יש‬
‫הערכה שונה ‪ pij‬לכל מתנה ‪j.‬המטרה היא למקסם את שביעות הרצון (סכום ערכי המתנות) של הילד‬
‫הכי פחות מרוצה‪ .‬זוהי בעיית אופטימיזציה מסוג "מקסום‪-‬מינימום‪" (maximin).‬‬

‫•‬

‫חשיבות ועניין ‪:‬הבעיה רלוונטית להקצאת משאבים הוגנת וקשורה באופן הדוק לבעיות תזמון במחשבים‬
‫‪(scheduling),‬אך עם פונקציית מטרה שונה( לא מזעור זמן סיום כולל ‪ - makespan).‬ההתמקדות ב"ילד הכי‬
‫פחות מרוצה" הופכת אותה למעניינת בהקשר של הוגנות‪.‬‬

‫•‬

‫פתרונות קודמים ‪:‬אלגוריתמים קודמים הציעו קירובים חלשים יחסית (כמו קירוב שתלוי בערך המתנה‬
‫המקסימלית‪ ,‬או קירוב ‪ n-m+1).‬תוצאות קשיות הראו שלא ניתן להשיג יחס קירוב טוב מ‪( 2-‬אלא אם‬
‫‪P=NP),‬אפילו עבור מקרה מיוחד שנקרא "מקרה ההקצאה המוגבלת ‪" (restricted assignment),‬שבו‬
‫ערך מתנה ‪pij‬הוא או ערך בסיסי ‪pj‬או ‪.0‬‬

‫•‬

‫מדוע אינם מספיקים ‪:‬הפתרונות הקודמים לא סיפקו ערובה טובה במקרים רבים‪ ,‬והפער בין התוצאות‬
‫האפשריות (חסם תחתון של ‪ )2‬לבין מה שהאלגוריתמים השיגו היה גדול‪ ,‬במיוחד במקרה ההקצאה המוגבלת‬
‫שעליו מתמקד המאמר‪.‬‬

‫•‬

‫תרומת המאמר (בקצרה) ‪:‬המאמר מציג אלגוריתם קירוב משופר משמעותית ‪, O(log log m /‬‬
‫‪log log log m),‬עבור מקרה ההקצאה המוגבלת‪.‬‬

‫‪ 2.‬עבודות קודמות‪(Related Work):‬‬
‫•‬

‫•‬

‫המאמר מזכיר מספר עבודות קודמות שחקרו את הבעיה תחת שמות שונים או גרסאות פשוטות יותר שלה‪:‬‬
‫‪o‬‬

‫עבודות על מקרים של "מכונות זהות" (כל הילדים מעריכים כל מתנה באותו אופן) או "מכונות‬
‫אחידות )‪" (Woeginger, Azar & Epstein‬ועוד‪.‬‬

‫‪o‬‬

‫עבודות שהתמודדו עם המקרה הכללי אך עם קירובים חלשים ‪(Bezakova & Dani, Lipton et‬‬
‫‪al.).‬ביניהן ‪, Bezakova & Dani‬הוכיחו את חסם הקרבה ‪ 2‬למקרה המוגבל‪.‬‬

‫‪o‬‬

‫עבודה של ‪ Golovin‬שנתנה קירוב מסוג אחר (מבטיחה ערך טוב לחלק מהילדים) וקירוב למקרה‬
‫מוגבל עוד יותר‪.‬‬

‫שוני מהמאמר הנוכחי ‪:‬המאמר הנוכחי מספק את יחס הקירוב הטוב ביותר הידוע עבור כל הילדים במקרה‬
‫ההקצאה המוגבלת הסטנדרטי‪ ,‬ומשתמש בטכניקה חזקה יותר ‪ (Configuration LP‬ועיגול מתוחכם )מאשר‬
‫רוב העבודות הקודמות שהסתמכו על ‪ Assignment LP‬פשוט יותר או גישות אחרות‪.‬‬

‫‪ 3.‬הגדרות‪(Notation / Preliminaries / Model) :‬‬
‫•‬

‫‪ m‬ילדים (מכונות) ‪:‬מקבלי המתנות‪.‬‬

‫•‬

‫‪ n‬מתנות (עבודות) ‪:‬הפריטים לחלוקה‪.‬‬

‫•‬

‫‪ pij:‬הערך (או זמן העיבוד) של מתנה ‪j‬עבור ילד ‪i.‬‬
‫‪ Si:‬קבוצת המתנות המוקצית לילד ‪i.‬‬
‫מטרת המקסימין‪: maximize ( min_{i=1...m} sum_{j in Si} pij ).‬‬
‫מקרה ההקצאה המוגבלת ‪ (Restricted Assignment):‬לכל מתנה ‪j‬יש ערך בסיסי ‪ pj.‬לכל זוג )‪(i,j‬‬
‫‪, pij‬שווה ל ‪-pj‬או ל‪.0-‬‬

‫•‬
‫•‬
‫•‬

‫בעיית סנטה קלאוס‬
‫•‬

‫תכנון ליניארי תצורות ‪ (Configuration LP):‬רילקסציה (הקלה) של הבעיה לבעיית תכנון ליניארי‪ .‬במקום‬
‫משתנה לכל זוג (ילד‪ ,‬מתנה)‪ ,‬יש משתנה ‪ xi,C‬לכל זוג (ילד ‪i,‬תצורה ‪ C),‬כאשר "תצורה ‪" C‬היא קבוצת‬
‫מתנות שסכום ערכן עבור ילד ‪ i‬הוא לפחות ‪( T‬ערך המטרה המשוער)‪ .‬ה ‪-LP‬מחפש הקצאה שברית של‬
‫תצורות לילדים‪.‬‬

‫•‬

‫פתרון ‪β-relaxed:‬פתרון שברי שבו מותר למתנה קטנה (מתנה שערכה נמוך מערך המטרה ‪ T‬חלקי‬
‫פרמטר )‪α‬להיות מוקצית בסך הכל (על פני כל הילדים והתצורות) עד פי ‪ β‬יותר מיחידה אחת‪.‬‬

‫•‬

‫מתנות "גדולות" ו"קטנות ‪":‬בהינתן ערך מטרה ‪ T‬ופרמטר ‪ α,‬מתנה ‪j‬היא "גדולה" אם > ‪pj‬‬
‫( ‪T/α‬וערכה "מעוגל" ל ‪-T),‬ו"קטנה" אחרת‪.‬‬

‫•‬

‫מכונות‪-‬על ‪ (Super-machines):‬כחלק מהאלגוריתם‪ ,‬הילדים והמתנות הגדולות מאורגנים‬
‫ב"אשכולות )‪" (Mi, Ji‬כך שבכל אשכול‪ ,‬מספר המתנות הגדולות קטן ב‪ 1-‬ממספר הילדים‪ .‬אשכול כזה‬
‫מתנהג כ"מכונת‪-‬על‪".‬‬

‫•‬

‫פונקציה ‪(γ, β)-good:‬מושג מופשט המשמש בשלב העיגול‪ .‬זו פונקציה שבוחרת‬
‫תצורה )‪Si,f(i‬לכל מכונת‪-‬על ‪ i,‬כך שניתן למצוא בתוכה תת‪-‬תצורה גדולה (לפחות ‪k/γ‬פריטים‪,‬‬
‫כש ‪- k‬הוא גודל התצורה המקורית)‪ ,‬ואף פריט (מתנה קטנה) לא מופיע ביותר מ ‪-β‬תתי‪-‬תצורות שנבחרו‪.‬‬

‫‪ 4.‬האלגוריתם עצמו (פסאודו‪-‬קוד בעברית)‪:‬‬
‫אלגוריתם_סנטה_קלאוס_מוגבל(קלט‪ :‬ילדים‪ ,‬מתנות‪ ,‬ערכים‪pij):‬‬
‫**‬

‫‪1.‬חיפוש בינארי על **‪ T:‬מצא את הערך הגבוה ביותר ‪ T‬שעבורו קיים פתרון *שברי*‬

‫ל( ‪-Configuration LP‬אילוצים ‪).4-6‬‬
‫**‬

‫‪2.‬הגדרת מתנות גדולות‪/‬קטנות‪ **:‬קבע פרמטר( ‪ α‬בערך‬

‫‪log log m / log log log‬‬

‫‪m).‬לכל מתנה ‪ j,‬אם ‪ pj > T/α,‬הגדר כ"גדולה ‪" (p'j=T),‬אחרת כ"קטנה‪" (p'j=pj).‬‬
‫**‬

‫‪3.‬פתרון **‪ Configuration LP:‬פתור את ה ‪-LP‬עם הערכים ‪ p'j‬וערך מטרה ‪ T,‬קבל‬

‫פתרון שברי‪x*.‬‬
‫**‬

‫‪4.‬יצירת מבנה אשכולות (מכונות‪-‬על)**‪:‬‬
‫א‪ .‬שנה את *‪ x‬כך שהקצאת המתנות ה*גדולות* יוצרת יער בגרף ילדים‪-‬מתנות (למה‬

‫‪.)5‬‬
‫ב‪ .‬פרק את היער לאשכולות )‪( (Mi, Ji‬מכונות‪-‬על)‪ ,‬וודא שסכום התצורות ה*קטנות*‬
‫בכל אשכול הוא ‪( 1‬למה ‪ .)6‬הפתרון כעת הוא( ‪ β-relaxed‬עם‪β=3).‬‬
‫**‬

‫‪5.‬עיגול תצורות קטנות (החלק המרכזי)**‪:‬‬
‫א‪(** .‬אופציונלי‪/‬טכני)‪ **:‬פרק מתנות קטנות ל"אטומים" אחידים‪.‬‬
‫ב‪** .‬דגימת מתנות‪ **:‬דגום תת‪-‬קבוצה קטנה ‪ Us‬של מתנות קטנות (או אטומים)‬

‫בהסתברות מסוימת‪q.‬‬
‫ג‪** .‬הפעלת אלגוריתם עזר‪ **:‬הפעל אלגוריתם ידוע )‪ (Leighton et al.‬על הבעיה‬
‫המצומצמת ל ‪-Us‬כדי למצוא פונקציה ‪ f‬הבוחרת תצורה לכל מכונת‪-‬על‪ ,‬ומבטיחה צפיפות‬
‫נמוכה* )'‪ (β‬במדגם‪*.‬‬
‫ד‪** .‬בדיקה‪ **:‬בדוק אם הפונקציה ‪ f‬טובה (כלומר ‪ (γ, β'')-good‬עם ‪γ≈1,‬‬
‫)'‪β''≈β‬גם עבור הבעיה *המקורית* (באמצעות ‪ Max-Flow).‬אם לא‪ ,‬חזור על הדגימה‪.‬‬
‫ה‪ .‬מצא את תתי‪-‬התצורות הגדולות )‪ S'i,f(i‬המובטחות ע"י‪f.‬‬

‫בעיית סנטה קלאוס‬
‫‪6.‬הרכבת הפתרון הסופי**‪:‬‬

‫**‬

‫א‪ .‬לכל מכונת‪-‬על ‪ Mi:‬הקצה את תת‪-‬התצורה הקטנה )‪ S'i,f(i‬לילד המתאים ‪m(i).‬‬
‫הקצה את המתנות הגדולות ‪ Ji‬לשאר הילדים ב‪-Mi.‬‬
‫ב‪** .‬טיפול בחפיפות‪ **:‬מכיוון שהקצאת ה '‪-S‬היא ‪ β''-relaxed,‬השתמש בטכניקה‬
‫ידועה (למה ‪ )4‬להסרת החפיפות‪ ,‬תוך איבוד פקטור של כ ''‪-β‬בערך המובטח‪.‬‬
‫‪7.‬פלט‪ **:‬הקצאה שלמה של מתנות לילדים‪.‬‬

‫**‬

‫‪ 5.‬הוכחת נכונות (סיכום הרעיון המרכזי)‪:‬‬
‫ההוכחה מסתמכת על מספר שלבים‪:‬‬
‫‪ .1‬ה ‪-Configuration LP‬מספק חסם עליון ‪T‬על הפתרון האופטימלי השלם‪.‬‬
‫‪ .2‬יצירת מבנה האשכולות (מכונות‪-‬על) מפשטת את הבעיה‪ :‬במקום להקצות את כל המתנות‪ ,‬מספיק לבחור‬
‫תצורה קטנה אחת לכל מכונת‪-‬על‪ ,‬ולהבטיח ששאר הילדים מקבלים מתנות גדולות‪.‬‬
‫‪ .3‬האתגר הוא לבחור את התצורות הקטנות כך שכל אחת תתרום מספיק ערך (קרוב ל ‪-T),‬ושלא תהיה‬
‫"צפיפות" גבוהה מדי בשימוש במתנות הקטנות (כל מתנה משמשת רק מספר נמוך ‪, β,‬של פעמים‪).‬‬
‫‪ .4‬העיגול המתוחכם משתמש בדגימה כדי להקטין את מורכבות הבעיה (להפוך את ‪k‬לקטן יותר)‪ .‬אז‪ ,‬אלגוריתם‬
‫עזר )‪ (Leighton et al.‬מוצא פונקציה ‪f‬עם צפיפות נמוכה '‪β‬על המדגם‪.‬‬
‫‪ .5‬נקודת המפתח ‪:‬המאמר מוכיח (למה ‪ )12‬שבהסתברות גבוהה‪ ,‬אם פונקציה ‪ f‬אינה טובה עבור הבעיה‬
‫המקורית‪ ,‬היא גם לא תהיה טובה עבור הבעיה הדגומה‪ .‬לכן‪ ,‬אם מצאנו פונקציה ‪ f‬שנראית טובה על‬
‫המדגם‪ ,‬היא כנראה טובה גם למקור‪.‬‬
‫‪ .6‬הבדיקה באמצעות ‪ Max-Flow‬מוודאת שאכן מצאנו פונקציה טובה למקור‪.‬‬
‫‪ .7‬לבסוף‪ ,‬למה ‪ 4‬מאפשרת להפוך את הפתרון ה ‪(-β''-relaxed‬שבו מתנות חופפות) לפתרון שלם‪ ,‬תוך‬
‫"תשלום" פקטור ''‪β‬ביחס הקירוב‪ .‬שילוב הפקטורים נותן את יחס הקירוב הסופי = )''‪O(β‬‬
‫‪O(log log m / log log log m).‬‬
‫‪ 6.‬ניסויים‪:‬‬
‫המאמר הוא מאמר תיאורטי המתמקד בפיתוח אלגוריתם וניתוח יחס הקירוב שלו ‪.‬הוא אינו כולל חלק ניסויי שבו‬
‫האלגוריתם מורץ על נתונים ומושווה לאלגוריתמים אחרים באופן אמפירי‪ .‬ההשוואה היא מול תוצאות תיאורטיות‬
‫קודמות וחסמים ידועים‪.‬‬
‫‪ 7.‬סיכום ועבודה עתידית‪(Future Work) :‬‬
‫•‬

‫סיכום ‪ :‬המאמר מציג שיפור משמעותי ביחס הקירוב למקרה ההקצאה המוגבלת של בעיית סנטה קלאוס‪,‬‬
‫באמצעות ‪ Configuration LP‬וטכניקות עיגול ודגימה מתקדמות‪ .‬הוא גם מראה שה ‪-Configuration LP‬‬
‫עצמו אינו פתרון קסם למקרה הכללי (יש לו פער שלמות גדול)‪.‬‬

‫•‬

‫שאלות פתוחות‪:‬‬
‫‪o‬‬

‫האם ניתן להשיג יחס קירוב קבוע ))‪ (O(1‬למקרה ההקצאה המוגבלת? (החסם התחתון הוא ‪ .)2‬זו‬
‫השאלה המרכזית הפתוחה‪.‬‬

‫בעיית סנטה קלאוס‬
‫‪o‬‬
‫•‬

‫מהו יחס הקירוב הנכון למקרה הכללי (כאשר ‪pij‬שרירותיים)? הפער בין ‪ 2‬ל )‪-O(n‬הוא עצום‪.‬‬

‫רעיונות להמשך ‪:‬השאלה המנוסחת בסוף המאמר רומזת על כיוון אפשרי‪ :‬האם אפשר להבטיח בחירה של‬
‫תתי‪-‬תצורות '‪S‬בגודל משמעותי ))‪ (Ω(k‬כך שכל מתנה תופיע לכל היותר מספר קבוע של פעמים‬
‫))‪(O(1‬בכל ה‪-S'-‬ים? תשובה חיובית תיתן קירוב )‪ O(1‬למקרה המוגבל‪.‬‬

‫הערה מקדימה ‪:‬האלגוריתם המלא כולל פרמטרים כמו ‪α, ε‬ושלבי דגימה והסתברות‪ .‬בדוגמאות‬
‫הפשוטות‪ ,‬נניח ערכים סבירים לפרמטרים אלו או נתעלם מההשפעה ההסתברותית לשם פשטות‬
‫ההדגמה‪ .‬האלגוריתם המרכזי מתחיל אחרי שלב ‪( 4‬יצירת מכונות‪-‬על)‪ ,‬ולכן נתמקד בעיקר בשלב זה‬
‫ובשלבים שאחריו‪.‬‬

‫‪ 1.‬דוגמאות מגוף המאמר‪:‬‬
‫•‬

‫דוגמת פער השלמות של ה( ‪-Assignment LP‬עמוד ‪):2‬‬

‫‪ o‬תיאור ‪: m‬ילדים ‪, n = 2m - 1‬מתנות ‪. m‬מתנות "קטנות )‪" (j=1..m‬ו ‪-m-1‬מתנות‬
‫"גדולות‪" (j=m+1..2m-1).‬‬
‫‪ o‬ערכים‪:‬‬

‫‪o‬‬

‫▪‬

‫מתנה קטנה ‪j‬שווה ‪ 1‬עבור ילד ‪j,‬ו‪ 0-‬לכל ילד אחר‪(pij = δij).‬‬

‫▪‬

‫מתנה גדולה ‪j‬שווה ‪m‬לכל ילד‪(pij = m).‬‬

‫הרצה ידנית (רעיונית)‪:‬‬
‫▪‬

‫חיפוש בינארי ‪:‬ננסה ‪T=m.‬‬

‫▪‬

‫( ‪Assignment LP‬עם חיתוך‪):‬‬

‫▪‬

‫▪‬

‫מתנות קטנות‪ :‬ערך ‪ (1‬קטן מ‪-T).‬‬

‫▪‬

‫מתנות גדולות‪ :‬ערך ( ‪m‬שווה ל‪-T).‬‬

‫▪‬

‫פתרון שברי אפשרי‪:‬‬
‫▪‬

‫הקצה מתנה קטנה ‪i‬לילד ( ‪i‬באופן שלם‪, yii = 1).‬‬

‫▪‬

‫הקצה ‪/m 1‬מכל מתנה גדולה לכל ילד ‪i.‬‬

‫▪‬

‫עומס על ילד( ‪ i: p_i,i‬ערך ‪) + (m-1) 1‬מתנות גדולות ‪* (1/m‬‬
‫חלק מהמתנה( * )ערך ‪m) = 1 + (m-1) * (1/m) * m = 1 + m - 1‬‬
‫‪= m.‬‬

‫▪‬

‫כל ילד מקבל ערך ‪m,‬ולכן קיים פתרון שברי עם ‪T=m.‬‬

‫פתרון שלם אופטימלי‪:‬‬
‫▪‬

‫יש ‪ m-1‬מתנות גדולות ו ‪-m‬ילדים‪ .‬בהכרח ילד אחד לפחות לא יקבל‬
‫מתנה גדולה‪.‬‬

‫בעיית סנטה קלאוס‬
‫▪‬

‫ילד שלא קיבל מתנה גדולה יכול לקבל רק מתנה קטנה אחת (את‬
‫המתנה ‪ i‬הספציפית שלו)‪ .‬ערך המתנה הזו הוא ‪.1‬‬

‫▪‬

‫לכן‪ ,‬הערך המינימלי בפתרון השלם הוא לכל היותר ‪.1‬‬

‫‪ o‬מה היא מדגימה ‪:‬פער גדול ))‪ (Ω(m‬בין הפתרון השברי של ה( ‪-Assignment LP‬ערך‬
‫)‪m‬לפתרון השלם (ערך ‪ .)1‬זה מראה מדוע ה ‪-Assignment LP‬הבסיסי אינו מספיק‪.‬‬
‫‪o‬‬

‫•‬

‫פלט האלגוריתם מהמאמר( לא ‪ Assignment LP):‬ה ‪(-Configuration LP‬לפי‬
‫המאמר) יהיה אינפיזיבלי (אין פתרון אפשרי שעומד בכל דרישות הבעיה) עבור ‪T>1‬‬
‫בדוגמה זו‪ ,‬ויזהה שהפתרון האופטימלי הוא ‪ .1‬לכן‪ ,‬עבור דוגמה זו‪ ,‬ה ‪-Configuration‬‬
‫‪ LP‬נותן תוצאה טובה‪.‬‬

‫דוגמת פער השלמות של ה( ‪-Configuration LP‬מקרה כללי ‪ -‬עמוד ‪ ,3‬איור ‪):1‬‬
‫‪ o‬תיאור ‪:‬מורכבת יותר‪ ,‬עם ‪k^2+k‬ילדים (ב ‪-k+1‬קבוצות) ו ‪-k^2+k-1‬מתנות (גדולות‪,‬‬
‫קטנות‪ ,‬ודמה)‪.‬‬
‫‪ o‬ערכים ‪:‬ערכים ספציפיים ‪ (k‬או ‪ 1‬או ‪) 0‬המפורטים במאמר‪.‬‬
‫‪o‬‬

‫הרצה ידנית (רעיונית)‪:‬‬
‫▪‬

‫‪ Configuration LP:‬המאמר מראה שקיים פתרון שברי (המתואר באיור)‬
‫עבור ‪T=k.‬הוא משתמש בתצורות המכילות מתנה גדולה אחת‪ ,‬או תצורות‬
‫המכילות ‪k‬מתנות קטנות מסוג מסוים‪ ,‬או תצורת דמה‪.‬‬

‫▪‬

‫פתרון שלם אופטימלי ‪:‬המאמר מראה (למה ‪ )3‬שבכל פתרון שלם‪ ,‬חייב להיות‬
‫ילד בקבוצה ‪ M0‬שלא מקבל מתנה גדולה‪ ,‬ויכול לקבל לכל היותר מתנה קטנה‬
‫אחת (ששווה ‪ 1‬עבורו)‪ .‬לכן‪ ,‬הערך האופטימלי השלם הוא ‪.1‬‬

‫‪ o‬מה היא מדגימה ‪:‬פער גדול ))‪ (Ω(k) = Ω(√m‬בין הפתרון השברי של ה ‪-Configuration‬‬
‫( ‪LP‬ערך )‪ k‬לפתרון השלם (ערך ‪ )1‬עבור המקרה הכללי (לא המוגבל‪).‬‬
‫‪o‬‬

‫פלט האלגוריתם ‪:‬האלגוריתם במאמר מיועד למקרה ההקצאה המוגבלת‪ ,‬ולכן דוגמה זו‬
‫אינה רלוונטית ישירות לאלגוריתם שהוא מנתח לעומק‪ ,‬אלא מראה את מגבלות ה‪-‬‬
‫‪Configuration LP‬באופן כללי‪.‬‬

‫‪ 2.‬דוגמאות על קלטים קטנים ופשוטים‪:‬‬
‫•‬

‫דוגמה ‪ :2.1‬קלט טריוויאלי‬
‫‪ o‬קלט ‪:‬ילד ‪ (m=1), 3 1‬מתנות ‪ (n=3).‬ערכים‪: p11=5, p12=3, p13=2.‬‬
‫‪ o‬הרצה ‪:‬האלגוריתם ימצא ‪(T=10‬סכום כל המתנות)‪ .‬הפתרון השלם הוא פשוט לתת את‬
‫כל המתנות לילד ‪.1‬‬

‫בעיית סנטה קלאוס‬

‫•‬

‫‪o‬‬

‫פלט ‪:‬ילד ‪ 1‬מקבל {מתנה‪ ,1‬מתנה‪ ,2‬מתנה‪ .}3‬ערך מינימלי = ‪.10‬‬

‫‪o‬‬

‫מדגימה ‪:‬המקרה הפשוט ביותר‪.‬‬

‫דוגמה ‪ :2.2‬שני ילדים‪ ,‬שתי מתנות (מקרה מוגבל)‬
‫‪ o‬קלט ‪: m=2, n=2.‬מתנה ‪: p1=10. 1‬מתנה ‪: p2=10.2‬‬
‫▪‬

‫ילד ‪: p11=10, p12=0.1‬‬

‫▪‬

‫ילד ‪: p21=0, p22=10.2‬‬

‫‪ o‬הרצה‪:‬‬

‫•‬

‫▪‬

‫חיפוש בינארי‪ :‬האופטימום השלם הוא ‪(T=10‬לתת מתנה ‪ 1‬לילד ‪ ,1‬ומתנה ‪2‬‬
‫לילד ‪ .)2‬נניח ‪T=10.‬‬

‫▪‬

‫הגדרת גדולות‪/‬קטנות( נניח ‪ α=2):‬שתי המתנות גדולות‪(10 > T/2 = 5).‬‬

‫▪‬

‫‪Configuration LP:‬הפתרון השברי היחיד הוא ‪x1,{1}=1‬ו‪-x2,{2}=1.‬‬

‫▪‬

‫יצירת אשכולות‪ :‬אין מתנות גדולות בין ילדים שונים‪ ,‬אז כל ילד הוא אשכול בפני‬
‫עצמו‪ .‬אין מתנות קטנות‪.‬‬

‫▪‬

‫עיגול‪ :‬טריוויאלי‪.‬‬

‫‪o‬‬

‫פלט ‪:‬ילד ‪ 1‬מקבל {מתנה‪ ,}1‬ילד ‪ 2‬מקבל {מתנה‪ .}2‬ערך מינימלי = ‪.10‬‬

‫‪o‬‬

‫מדגימה ‪:‬מקרה פשוט שבו הפתרון ברור והאלגוריתם מוצא אותו‪.‬‬

‫דוגמה ‪ :2.3‬שני ילדים‪ ,‬שלוש מתנות (מקרה מוגבל)‬
‫‪ o‬קלט ‪: m=2, n=3.‬מתנה ‪: p1=10. 1‬מתנה ‪: p2=10. 2‬מתנה ‪: p3=1.3‬‬
‫▪‬

‫ילד ‪: p11=10, p12=0, p13=1.1‬‬

‫▪‬

‫ילד ‪: p21=0, p22=10, p23=1.2‬‬

‫‪ o‬הרצה‪:‬‬
‫▪‬

‫חיפוש בינארי‪ :‬האופטימום השלם הוא כנראה ‪(T=10.‬ילד ‪ 1‬מקבל {מתנה‪,}1‬‬
‫ילד ‪ 2‬מקבל {מתנה‪ ,2‬מתנה‪ .}3‬מינימום ‪ .)10‬ננסה ‪T=10.‬‬

‫▪‬

‫הגדרת גדולות‪/‬קטנות ‪ (α=2):‬מתנות ‪ 2 ,1‬גדולות‪ .‬מתנה ‪ 3‬קטנה‪.‬‬

‫▪‬

‫‪(Configuration LP‬רעיוני)‪ :‬פתרון שברי אפשרי‪: x1,{1}=1, x2,{2,3}=1.‬‬

‫▪‬

‫יצירת אשכולות‪ :‬שוב‪ ,‬כל ילד אשכול‪ .‬אין מתנות קטנות להעביר בין אשכולות‪.‬‬

‫▪‬

‫עיגול‪ :‬טריוויאלי‪.‬‬

‫בעיית סנטה קלאוס‬
‫‪o‬‬

‫פלט ‪:‬ילד ‪ 1‬מקבל {מתנה‪ ,}1‬ילד ‪ 2‬מקבל {מתנה‪ ,2‬מתנה‪ .}3‬ערך מינימלי = ‪.10‬‬

‫‪o‬‬

‫מדגימה ‪:‬מקרה פשוט עם מתנה קטנה‪.‬‬

‫‪ 3.‬דוגמאות לענפים באלגוריתם‪:‬‬
‫(נתמקד בשלב העיגול‪ ,‬סעיף ‪)6.5‬‬
‫•‬

‫דוגמה ‪ :3.1‬מעבר בבדיקה (שלב ‪.3‬ד ‪ -‬הפונקציה טובה גם למקור)‬
‫‪ o‬קלט ‪:‬נניח שיש לנו מכונת‪-‬על אחת )‪ (p=1‬עם ילד אחד )‪ (m=1‬ותצורות קטנות רבות‪.‬‬
‫נניח שמתנה מסוימת ‪j‬מופיעה רק במעט תצורות‪.‬‬
‫‪ o‬הרצה‪:‬‬

‫‪o‬‬
‫•‬

‫▪‬

‫דגימת מתנות‪ :‬סביר שמתנה ‪ j‬לא תידגם אם היא נדירה‪.‬‬

‫▪‬

‫אלגוריתם עזר ‪ (Leighton):‬יפעל על המדגם‪ ,‬לא "יראה" את ‪j.‬‬

‫▪‬

‫בדיקה ‪ (Max-Flow):‬כאשר נבדוק את הפונקציה ‪ f‬על הבעיה המקורית‪,‬‬
‫המתנה ‪ j‬לא תגרום לחריגה ממגבלת הצפיפות ''‪β‬כי היא נדירה במקור‪ .‬לכן‪,‬‬
‫הבדיקה תעבור‪.‬‬

‫מה מדגימה ‪:‬מצב שבו הדגימה לא "פספסה" בעיה אמיתית של צפיפות גבוהה‪.‬‬

‫דוגמה ‪ :3.2‬כישלון בבדיקה (שלב ‪.3‬ד ‪ -‬הפונקציה לא טובה למקור)‬
‫‪ o‬קלט ‪:‬נניח מכונת‪-‬על אחת ‪ (p=1),‬ילד אחד ‪ (m=1).‬נניח מתנה ‪j‬מופיעה בהרבה מאוד‬
‫תצורות אפשריות ‪ (> β''),‬אך רוב התצורות הללו קטנות ולא סביר שידגמו הרבה‬
‫אלמנטים מהן‪.‬‬
‫‪ o‬הרצה‪:‬‬

‫‪o‬‬

‫▪‬

‫דגימת מתנות‪ :‬ייתכן שנדגום מעט מופעים של ‪j,‬או אפילו לא נדגום אותו כלל‪ ,‬כי‬
‫הוא מופיע בתצורות "דלילות" שלא נבחרו לדגימה‪.‬‬

‫▪‬

‫אלגוריתם עזר ‪ (Leighton):‬יפעל על המדגם וימצא פונקציה ‪f‬שנראית טובה‬
‫(כי ‪j‬כמעט לא נראה במדגם‪).‬‬

‫▪‬

‫בדיקה ‪ (Max-Flow):‬כשנבדוק את ‪f‬על הבעיה המקורית‪ ,‬נגלה שמתנה ‪j‬כן‬
‫מופיעה ביותר מ ''‪-β‬פעמים בתצורה שנבחרה על ידי ‪f.‬הבדיקה תיכשל‪.‬‬
‫האלגוריתם יחזור על הדגימה‪.‬‬

‫מה מדגימה ‪:‬מצב שבו הדגימה "מסתירה" בעיית צפיפות שקיימת במקור‪ ,‬והבדיקה‬
‫הסופית תופסת זאת‪.‬‬

‫בעיית סנטה קלאוס‬

‫‪ 4.‬דוגמה שעליה האלגוריתם פועל בצורה מושלמת‪:‬‬
‫•‬

‫דוגמה ‪ :4.1‬הקצאה מאוזנת לחלוטין (דומה ל‪)2.2-‬‬
‫‪ o‬קלט ‪: m‬ילדים ‪, n=m‬מתנות‪ .‬מתנה )‪j (pj=T‬מתאימה רק לילד ‪j (pij = T * δij).‬‬
‫‪ o‬הרצה‪:‬‬
‫▪‬

‫חיפוש בינארי ימצא ‪T.‬‬

‫▪‬

‫כל המתנות גדולות‪.‬‬

‫▪‬

‫‪Configuration LP‬ימצא את הפתרון ‪xi,{i}=1‬לכל ‪i.‬‬

‫▪‬

‫אין מתנות קטנות‪ ,‬אין צורך בעיגול המורכב‪.‬‬

‫‪o‬‬

‫פלט ‪:‬ילד ‪i‬מקבל מתנה ‪i.‬ערך מינימלי ‪ = T.‬זה הפתרון האופטימלי‪.‬‬

‫‪o‬‬

‫מדוע מושלם ‪:‬הפתרון השברי של ה ‪-LP‬הוא כבר שלם והוא הפתרון האופטימלי‪.‬‬
‫האלגוריתם לא מאבד כלום‪.‬‬

‫‪ 5.‬דוגמה שעליה האלגוריתם פועל בצורה גרועה (באופן יחסי)‪:‬‬
‫כדי שהאלגוריתם יפעל "גרוע" (כלומר‪ ,‬יחס הקירוב יהיה קרוב לערך המובטח )‪O(log log m /...‬ולא‬
‫קרוב ל‪ ,)1-‬אנחנו צריכים מבנה שבו‪:‬‬
‫א‪ .‬ה ‪-Configuration LP‬נותן פתרון ‪T.‬‬
‫ב‪ .‬הפתרון השלם האופטימלי נמוך משמעותית מ‪-T.‬‬
‫ג‪ .‬המבנה דורש שימוש נרחב במתנות קטנות וחופפות‪ ,‬מה שמאלץ את פקטור ה ''‪-β‬להיות משמעותי‬
‫בשלב התיקון (למה ‪.)4‬‬
‫•‬

‫דוגמה ‪ :5.1‬מבנה דמוי‪-‬כיסוי עם חפיפה גבוהה (רעיוני)‬
‫‪ o‬קלט‪:‬‬
‫▪‬

‫קבוצת ילדים גדולה ‪m.‬‬

‫▪‬

‫מתנות גדולות שיוצרות מבנה אשכולות מורכב‪.‬‬

‫▪‬

‫הרבה מתנות קטנות מאוד‪(pj << T/α).‬‬

‫▪‬

‫כדי להגיע לערך ‪T‬עבור הילד שחייב לקבל קטנות בכל אשכול‪ ,‬נדרש לאסוף‬
‫מספר גדול מאוד )‪ (k‬של מתנות קטנות‪.‬‬

‫▪‬

‫הרבה מתנות קטנות משותפות להרבה תצורות פוטנציאליות עבור ילדים שונים‬
‫(חפיפה גבוהה)‪.‬‬

‫בעיית סנטה קלאוס‬
‫‪ o‬הרצה (רעיונית)‪:‬‬
‫▪‬

‫ה ‪-LP‬עשוי למצוא פתרון שברי עם ‪T‬גבוה יחסית‪ ,‬על ידי "מריחה" של המתנות‬
‫הקטנות החופפות בין הרבה תצורות חלקיות‪.‬‬

‫▪‬

‫בשלב העיגול‪ ,‬האלגוריתם יצטרך לבחור תצורה אחת לכל מכונת‪-‬על‪ .‬מכיוון‬
‫שיש חפיפה גבוהה‪ ,‬סביר שמתנות קטנות רבות יופיעו ביותר מתצורה אחת‬
‫שנבחרה‪.‬‬

‫▪‬

‫האלגוריתם יזהה צפיפות גבוהה ‪β''.‬‬

‫▪‬

‫שלב התיקון (למה ‪ )4‬יחלק את הערך המובטח ב( ''‪-β‬ששווה בערך ‪log log m /‬‬
‫‪...).‬‬

‫▪‬

‫הפתרון השלם האופטימלי עשוי להיות גבוה יותר מ ‪-T / β'',‬אך הפער בין ‪T‬ל‪-‬‬
‫''‪T/β‬מראה שהאלגוריתם "איבד" פקטור משמעותי‪.‬‬

‫‪o‬‬

‫פלט ‪:‬פתרון עם ערך ‪Ω(T / (log log m / log log log m)).‬‬

‫‪o‬‬

‫מדוע גרוע יחסית ‪:‬הפער בין הפתרון השברי ‪T‬לפלט הסופי נובע מהצורך לטפל‬
‫בצפיפות גבוהה של מתנות קטנות‪.‬‬

‫‪ 6.‬דוגמה על קלט גדול ומורכב‪:‬‬
‫•‬

‫דוגמה ‪ :6.1‬מבנה "שכבות"‬
‫‪ o‬קלט‪:‬‬
‫▪‬

‫‪m = 100‬ילדים ‪. n = 500‬מתנות‪.‬‬

‫▪‬

‫שכבה ‪( 1‬גדולות בסיסיות) ‪: 80‬מתנות גדולות ‪ (pj = 100).‬כל מתנה מתאימה‬
‫רק לקבוצה קטנה (נגיד ‪ )5‬של ילדים‪.‬‬

‫▪‬

‫שכבה ‪( 2‬גדולות משניות) ‪: 20‬מתנות גדולות נוספות ‪ (pj = 100).‬כל אחת‬
‫מתאימה לקבוצה רחבה יותר (נגיד ‪ )20‬של ילדים‪ ,‬כולל כאלה שכבר "מכוסים"‬
‫חלקית ע"י שכבה ‪.1‬‬

‫▪‬

‫שכבה ‪( 3‬קטנות א) ‪: 200‬מתנות קטנות ‪ (pj = 5).‬כל אחת מתאימה לקבוצות‬
‫ילדים אקראיות בגודל ‪.10‬‬

‫▪‬

‫שכבה ‪( 4‬קטנות ב) ‪: 200‬מתנות קטנות מאוד ‪ (pj = 1).‬כל אחת מתאימה ל‪-‬‬
‫‪ 50%‬מהילדים‪.‬‬

‫‪ o‬הרצה (רעיונית)‪:‬‬

‫בעיית סנטה קלאוס‬
‫▪‬

‫חיפוש בינארי ו ‪-LP:‬האלגוריתם ימצא ‪T‬כלשהו (נניח סביב ‪ .)100-110‬הפתרון‬
‫השברי ישתמש בשילובים של מתנות מכל השכבות‪ .‬מתנות גדולות (‪)1,2‬‬
‫וקטנות (‪ )3,4‬יהיו רלוונטיות‪ .‬נניח ‪T=105, α=5.‬מתנות שכבה ‪ 1,2‬גדולות‪.‬‬
‫שכבה ‪ 3,4‬קטנות‪.‬‬

‫▪‬

‫יצירת אשכולות ‪:‬המתנות הגדולות ייצרו מבנה אשכולות‪ ,‬ייתכן שחלק מהילדים‬
‫יהיו באשכולות עם אחרים‪ ,‬וחלק ישארו כ"בודדים" אם לא חלקו מתנות גדולות‪.‬‬
‫בכל אשכול‪ ,‬ילד אחד יצטרך לקבל תצורת קטנות‪.‬‬

‫▪‬

‫עיגול‪:‬‬
‫▪‬

‫הדגימה תתבצע מהמתנות הקטנות (שכבות ‪ 3‬ו‪.)4-‬‬

‫▪‬

‫אלגוריתם ‪ Leighton‬יופעל על המדגם‪.‬‬

‫▪‬

‫סביר שתהיה צפיפות מסוימת במתנות משכבה ‪( 4‬כי הן משותפות‬
‫להרבה ילדים)‪ .‬מתנות שכבה ‪ 3‬ייצרו צפיפות נמוכה יותר‪.‬‬

‫▪‬

‫הבדיקה )‪ (Max-Flow‬תוודא שהצפיפות הכוללת אינה חורגת מ‪-β''.‬‬

‫▪‬

‫התיקון (למה ‪ )4‬יתבצע‪.‬‬

‫‪ o‬פלט ‪:‬הקצאה שלמה שבה ילדים מסוימים מקבלים מתנות גדולות‪ ,‬ואחרים (אחד מכל‬
‫אשכול) מקבלים אוסף של מתנות קטנות משכבות ‪ 3‬ו‪ .4-‬הערך המינימלי יהיה מובטח‬
‫להיות ‪Ω(T / β'').‬‬
‫‪o‬‬

‫מה מדגימה ‪:‬אינטראקציה מורכבת בין סוגים שונים של מתנות וקבוצות ילדים‪ ,‬המובילה‬
‫למבנה אשכולות לא טריוויאלי וצורך אמיתי בשלב העיגול המתוחכם‪.‬‬

